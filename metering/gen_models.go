//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package metering

import "time"

type BatchUsageEvent struct {
	Request []*UsageEvent
}

type BatchUsageEventOkResponse struct {
	Count *int32
	Result []*UsageBatchEventOkMessage
}

type UsageBatchEventOkMessage struct {
	// Dimension identifier
	Dimension *string

	// Time in UTC when the usage event occurred
	EffectiveStartTime *time.Time
	Error *UsageEventConflictResponse

	// Time this message was created in UTC
	MessageTime *time.Time

	// Plan associated with the purchased offer
	PlanID *string

	// Number of units consumed
	Quantity *float64

	// Identifier of the resource against which usage is emitted
	ResourceID *string

	// Identifier of the managed app resource against which usage is emitted
	ResourceURI *string

	// Status of the operation.
	Status *UsageEventStatusEnum

	// Unique identifier associated with the usage event
	UsageEventID *string
}

type UsageEvent struct {
	// Dimension identifier
	Dimension *string

	// Time in UTC when the usage event occurred
	EffectiveStartTime *time.Time

	// Plan associated with the purchased offer
	PlanID *string

	// Number of units consumed
	Quantity *float64

	// subscriptionId property value for SaaS offer subscriptions; resourceUsageId property on the managed application resource
// for managed application offers. For managed applications, only use one of
// resourceId or resourceUri.
	ResourceID *string

	// Resource URI for the managed app. Used with managed applications. Only use resourceUri or resourceId, but never both.
	ResourceURI *string
}

type UsageEventBadRequestResponse struct {
	Code *string
	Details []*UsageEventBadRequestResponseDetail
	Message *string
	Target *string
}

type UsageEventBadRequestResponseDetail struct {
	Code *string
	Message *string
	Target *string
}

type UsageEventConflictResponse struct {
	AdditionalInfo *UsageEventConflictResponseAdditionalInfo
	Code *string
	Message *string
}

type UsageEventConflictResponseAdditionalInfo struct {
	AcceptedMessage *UsageEventOkResponse
}

type UsageEventOkResponse struct {
	// Dimension identifier
	Dimension *string

	// Time in UTC when the usage event occurred
	EffectiveStartTime *time.Time

	// Time this message was created in UTC
	MessageTime *time.Time

	// Plan associated with the purchased offer
	PlanID *string

	// Number of units consumed
	Quantity *float64

	// Identifier of the resource against which usage is emitted
	ResourceID *string

	// Identifier of the managed app resource against which usage is emitted
	ResourceURI *string

	// Status of the operation.
	Status *UsageEventStatusEnum

	// Unique identifier associated with the usage event
	UsageEventID *string
}

