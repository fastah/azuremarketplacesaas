// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package metering

import "time"

// OperationsClientGetUsageEventOptions contains the optional parameters for the OperationsClient.GetUsageEvent method.
type OperationsClientGetUsageEventOptions struct {
	// Azure Subscription Id.
	AzureSubscriptionID *string

	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string

	// DimensionId.
	Dimension *string

	// OfferId.
	OfferID *string

	// PlanId.
	PlanID *string

	// Recon Status.
	ReconStatus *ReconStatusEnum

	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string

	// DateTime in ISO8601 format. Default = current date.
	UsageEndDate *time.Time
}

// OperationsClientPostBatchUsageEventOptions contains the optional parameters for the OperationsClient.PostBatchUsageEvent
// method.
type OperationsClientPostBatchUsageEventOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string

	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// OperationsClientPostUsageEventOptions contains the optional parameters for the OperationsClient.PostUsageEvent method.
type OperationsClientPostUsageEventOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string

	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

